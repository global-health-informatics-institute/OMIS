<div id="hexGrid"></div>

<style>
  .hex {
    width: 60px;
    height: 69px;
    background: white;
    clip-path: polygon(
      50% 0%, 100% 25%, 100% 75%,
      50% 100%, 0% 75%, 0% 25%
    );
    position: absolute;
    opacity: 0;
    transform: scale(0);
    z-index: 100;
  }

  #hexGrid {
    position: absolute;
    top: 0; left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 100;
  }

  .hidden-slide {
    display: none !important;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const titleContainer = document.getElementById("dashboard-title");
    const hexGrid = document.getElementById("hexGrid");
    const spans = document.querySelectorAll("span[data-title]");
    const cols = Math.ceil(window.innerWidth / 60);
    const rows = Math.ceil(window.innerHeight / 60);
    const hexes = [];

    // Build hex grid
    for (let y = 0; y < rows; y++) {
      for (let x = 0; x < cols; x++) {
        const hex = document.createElement("div");
        hex.className = "hex";
        hex.style.top = `${y * 60}px`;
        hex.style.left = `${x * 60 + (y % 2 === 0 ? 0 : 30)}px`;
        hexGrid.appendChild(hex);
        hexes.push(hex);
      }
    }

    // Turn spans into slide groups
    const slides = [];
    spans.forEach((span, index) => {
      const title = span.dataset.title;
      const elements = [];
      let next = span.nextElementSibling;
      while (next && !(next.matches('span[data-title]'))) {
        elements.push(next);
        next = next.nextElementSibling;
      }
      slides.push({ title, elements });
    });

    // Show only the first
    slides.forEach((s, i) => {
      s.elements.forEach(el => el.classList.toggle('hidden-slide', i !== 0));
    });
    titleContainer.textContent = slides[0].title;
    let current = 0;

    function transitionToNext() {
      const next = (current + 1) % slides.length;

      const tl = gsap.timeline({
        onComplete: () => {
          slides[current].elements.forEach(el => el.classList.add('hidden-slide'));
          slides[next].elements.forEach(el => el.classList.remove('hidden-slide'));

          titleContainer.textContent = slides[next].title;

          // Optional slide fade-in
          gsap.fromTo(slides[next].elements, { opacity: 0 }, { opacity: 1, duration: 0.5 });

          // Animate hex disappear
          gsap.to(hexes, {
            scale: 0,
            opacity: 0,
            duration: 0.4,
            delay: 0.2,
            stagger: {
              grid: [rows, cols],
              from: "center",
              amount: 0.6
            }
          });

          current = next;
        }
      });

      // Animate hex cover in
      tl.to(hexes, {
        scale: 1,
        opacity: 0.1,
        duration: 0.4,
        stagger: {
          grid: [rows, cols],
          from: "center",
          amount: 0.6
        }
      });
    }

    setInterval(transitionToNext, 30000); // should change to 240000 
    window.transitionToNext = transitionToNext; 
  });
</script>
