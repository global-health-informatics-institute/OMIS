
<script>
document.addEventListener("DOMContentLoaded", function () {
    const form = document.querySelector("form");

    if (form) {
        form.addEventListener("submit", function (event) {
            event.preventDefault();
            const tabs = document.querySelectorAll(".tab-content .tab-pane");
            let allValid = true;
            tabs.forEach(tab => tab.classList.remove("d-none"));
            const requiredFields = form.querySelectorAll(".required-field");
            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    allValid = false;
                    field.classList.add("is-invalid");
                } else {
                    field.classList.remove("is-invalid");
                }
            });
            tabs.forEach(tab => {
                if (!tab.classList.contains("active")) {
                    tab.classList.add("d-none");
                }
            });
            if (allValid) {
                form.submit();
            } else {
                showFlashMessage("Please fill out all required fields.", "danger");
            }
        });
    }
});

 
// Disable clicks on nav tabs
// document.addEventListener("DOMContentLoaded", function () {
//     const navLinks = document.querySelectorAll(".nav-tabs .nav-link");
//     navLinks.forEach(navLink => {
//         navLink.addEventListener("click", function (event) {
//             event.preventDefault(); 
//         });
//         navLink.style.pointerEvents = "none"; 
//     });
// });

// Validate all required in active tab
function validateFields(tabId) {
    var tab = document.getElementById(tabId);
    var requiredFields = tab.querySelectorAll(".required-field");
    var allFilled = true;

    requiredFields.forEach(function (field) {
        if (!field.value.trim()) {
            allFilled = false;
            field.classList.add("is-invalid");
        } else {
            field.classList.remove("is-invalid");
        }
    });

    if (allFilled) {
        return true;
    } else {
        showFlashMessage("Please fill out all required fields.", "danger");
        return false;
    }
}

// flash message
function showFlashMessage(message, type = "success") {
    let flashContainer = document.getElementById("flash-container");
    if (!flashContainer) {
        flashContainer = document.createElement("div");
        flashContainer.id = "flash-container";
        flashContainer.style.position = "fixed";
        flashContainer.style.top = "20px";
        flashContainer.style.right = "20px";
        flashContainer.style.zIndex = "1050";
        document.body.appendChild(flashContainer);
    }
    const flashMessage = document.createElement("div");
    flashMessage.className = `alert alert-${type} fade show`;
    flashMessage.role = "alert";
    flashMessage.innerHTML = `
        ${message}
        <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
    `;

    flashContainer.appendChild(flashMessage);

    setTimeout(() => {
        flashMessage.classList.remove("show");
        flashMessage.classList.add("fade");
        setTimeout(() => flashMessage.remove(), 500);
    }, 3000);
}

// navigate between steps
function buttonNavigate(currentStep, direction) {
    const tabIds = [
        "nav-personal-demographics",
        "nav-employment-details",
        "nav-level-effort",
        "nav-supervision",
        "nav-summary"
    ];

    let targetStep = direction === "next" ? currentStep + 1 : currentStep - 1;

    if (direction === "next") {
        if (validateFields(tabIds[currentStep - 1])) {
            navigateWithButton(tabIds[targetStep - 1]);
        }
    } else {
        navigateWithButton(tabIds[targetStep - 1]);
    }
}

// navigate tabs with buttons
function navigateWithButton(targetTabId) {
    const navLinks = document.querySelectorAll(".nav-tabs .nav-link");
    
    navLinks.forEach((navLink) => {
        navLink.classList.remove("active");
        navLink.setAttribute("aria-selected", "false");
    });

    const targetNavLink = document.querySelector(`.nav-tabs .nav-link[data-bs-target="#${targetTabId}"]`);
    if (targetNavLink) {
        targetNavLink.classList.add("active");
        targetNavLink.setAttribute("aria-selected", "true");
    }

    document.querySelectorAll(".tab-content .tab-pane").forEach((tab) => {
        tab.classList.add("d-none");
        tab.classList.remove("show", "active");
    });

    const activeTab = document.getElementById(targetTabId);
    if (activeTab) {
        activeTab.classList.remove("d-none");
        activeTab.classList.add("show", "active");
    }

    // Update progress bar
    if (targetNavLink) {
        const navLinksArray = Array.from(navLinks);
        const newStepIndex = navLinksArray.indexOf(targetNavLink) + 1;
        updateProgress(newStepIndex);
    }
}

// update progress bar
function updateProgress(step) {
    let progressBar = document.getElementById("progress-bar");
    let progress = (step - 1) * 25;
    progressBar.style.width = progress + "%";
    progressBar.setAttribute("aria-valuenow", progress);
    progressBar.textContent = progress + "%";
}

// SUMMARY
function populatePersonalDemographics() {
  const firstName = document.querySelector("input[name='person[first_name]']")?.value || "--";
  const middleName = document.querySelector("input[name='person[middle_name]']")?.value || "--";
  const lastName = document.querySelector("input[name='person[last_name]']")?.value || "--";
  const birthDate = document.querySelector("input[name='person[birth_date]']")?.value || "--";
  const gender = document.querySelector("select[name='person[gender]']")?.value || "--";
  const maritalStatus = document.querySelector("select[name='person[marital_status]']")?.value || "--";
  const altPhone = document.querySelector("input[name='person[alt_phone]']")?.value || "--";
  const email = document.querySelector("input[name='person[email_address]']")?.value || "--";
  const postalAddress = document.querySelector("input[name='person[postal_address]']")?.value || "--";
  const officialEmail = document.querySelector("input[name='person[official_email]']")?.value || "--";
  const residentialAddress = document.querySelector("input[name='person[residential_address]']")?.value || "--";
  const landmark = document.querySelector("input[name='person[landmark]']")?.value || "--";

  document.getElementById("summary-first-name").textContent = firstName;
  document.getElementById("summary-middle-name").textContent = middleName;
  document.getElementById("summary-last-name").textContent = lastName;
  document.getElementById("summary-birth-date").textContent = birthDate;
  document.getElementById("summary-gender").textContent = gender;
  document.getElementById("summary-marital-status").textContent = maritalStatus;
  document.getElementById("summary-alt-phone").textContent = altPhone;
  document.getElementById("summary-email").textContent = email;
  document.getElementById("summary-postal-address").textContent = postalAddress;
  document.getElementById("summary-official-email").textContent = officialEmail;
  document.getElementById("summary-residential-address").textContent = residentialAddress;
  document.getElementById("summary-landmark").textContent = landmark;
}

function populateEmployeeDetails() {
    const employmentDate = document.querySelector("input[name='employee[employment_date]']")?.value || "--";
    const designatedRole = document.querySelector("select[name='employee[designated_role]']")?.value || "--";
    const designationStartDate = document.querySelector("input[name='employee[designation_start_date]']")?.value || "--"; 
    const branchSelect = document.querySelector("select[name='employee[branch]']");
    const branch = branchSelect ? branchSelect.options[branchSelect.selectedIndex].text : "--";
    const department = document.querySelector("select[name='employee[departments]']")?.value || "--";

    document.getElementById("summary-employment-date").textContent = employmentDate;
    document.getElementById("summary-designated-role").textContent = designatedRole;
    document.getElementById("summary-designated-start-date").textContent = designationStartDate;
    document.getElementById("summary-branch").textContent = branch;
    document.getElementById("summary-department").textContent = department;
}

function populateLevelOfEffort() {
    const project = document.querySelector("select[name='projects[][project]']")?.value || "--";  
    const allocatedEffort = document.querySelector("input[name='projects[][allocated_effort]']")?.value || "--";

    document.getElementById("summary-project").textContent = project;
    document.getElementById("summary-allocated-effort").textContent = allocatedEffort;
}

function populateSupervision() {
    const supervisor = document.querySelector("select[name='supervision[supervisor]']")?.value || "--";
    const startedOn = document.querySelector("input[name='supervision[started_on]']")?.value || "--";

    document.getElementById("summary-supervisor").textContent = supervisor;
    document.getElementById("summary-started-on").textContent = startedOn;
}

populatePersonalDemographics();
populateEmployeeDetails();
populateLevelOfEffort();
populateSupervision();


const formElements = document.querySelectorAll("input[name^='person['], select[name^='person['], input[name^='employee['], select[name^='employee['], select[name^='supervision['], input[name^='supervision['], select[name^='projects['], input[name^='projects[']");
formElements.forEach(element => {
    element.addEventListener("change", () => {
        populatePersonalDemographics();
        populateEmployeeDetails();
        populateLevelOfEffort();
        populateSupervision();
    });
});

</script>