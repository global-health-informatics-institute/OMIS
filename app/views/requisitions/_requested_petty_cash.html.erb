<div id="flash-messages">
  <%= render "layouts/flashes" %>
</div>
<%= form_with model: @requisition, url: resubmit_request_requisition_path(@requisition), method: :patch, local: true do |form| %>
  <div class="row mt-3 p-2">
    <div class="col p-2">
      <div class="card">
        <div class="card-header card-header-dark">
          <div class="row">
            <div class="col col-md-9">
              <h5>Petty Cash Request</h5>
            </div>
            <div class="col col-md-2">
              <span class="fw-bold fst-italic">Status: <%= @requisition.current_state %></span>
            </div>
          </div>
        </div>

        <div class="card-body">
          <div class="row">
            <div class="row mt-3">
              <div class="col-2 fw-normal">Initiated On</div>
              <div class="col-2 fw-bold fst-italic"><%= @requisition.initiated_on.strftime("%m/%d/%Y") %></div>
              <div class="col-2 fw-normal">Initiated By</div>
              <div class="col-2 fw-bold fst-italic"><%= @requisition.user.full_name %></div>
              <div class="col-1 fw-normal">Project</div>
              <div class="col-2">
                <% if @requisition.current_state == "Recalled" %>
                  <%= form.collection_select :project_id, @projects, :id, :short_name, { prompt: "Select Project" }, class: "form-select" %>
                <% else %>
                  <%= form.hidden_field :project_id, value: @requisition.project_id %>
                  <div class="fw-bold fst-italic"><%= @requisition.project.short_name %></div>
                <% end %>
              </div>
            </div>

            <div class="row mt-4 mb-4">
              <div class="col-2 fw-normal">Purpose</div>
              <div class="col-2">
                <% if @requisition.current_state == "Recalled" %>
                  <%= form.text_field :purpose, class: "form-control" %>
                <% else %>
                  <%= form.hidden_field :purpose, value: @requisition.purpose %>
                  <div class="fw-bold fst-italic"><%= @requisition.purpose %></div>
                <% end %>
              </div>

              <div class="col-2 fw-normal">Amount (MWK)</div>
              <div class="col-2">
                <% if @requisition.current_state == "Recalled" %>
                  <%= form.number_field :amount,
                        step: "0.01",
                        class: "form-control #{'is-invalid' if flash[:amount_error]}",
                        min: 0,
                        max: @petty_cash_limit,
                        required: true,
                         data: { limit: @petty_cash_limit },
                        placeholder: "Max allowed: MWK#{number_with_precision(@petty_cash_limit, precision: 2)}" %>
                  <% if flash[:amount_error] %>
                    <div class="invalid-feedback d-block">
                      <%= flash[:amount_error] %>
                    </div>
                  <% else %>
                    <small class="form-text text-muted">
                      Maximum: MWK<%= number_with_precision(@petty_cash_limit, precision: 2) %>
                    </small>
                  <% end %>
                <% else %>
                  <%= form.hidden_field :amount, value: @requisition.amount %>
                  <div class="fw-bold fst-italic"><%= number_with_precision(@requisition.amount.to_i, precision: 2) %></div>
                  <%= form.number_field :amount, step: "0.01", class: "form-control" %>
                <% else %>
                  <%= form.hidden_field :amount, value: @requisition.amount %>
                  <div class="fw-bold fst-italic"><%= number_with_precision(@requisition.amount.to_i, precision: 2) %></div>
                <% end %>
              </div>
            </div>


            <div class="row mt-3 mb-3">
              <div class="col-2 fw-normal">Authorized By</div>
              <div class="col-2 fw-bold fst-italic"><%= @requisition.reviewer rescue nil %></div>
              <div class="col-2 fw-normal">Paid By</div>
              <div class="col-2 fw-bold fst-italic"><%= @requisition.approver rescue nil %></div>
              <div class="col-2 fw-normal">Liquidated By</div>
              <div class="col-2 fw-bold fst-italic"><%= @requisition.approver rescue nil %></div>
            </div>
          </div>
        </div>
      </div>

      <hr>

      <div class="mt-3 mb-3" id="rejection-reason-container" style="display: none;">
        <div class="col-2 fw-normal">Reason for Rejection</div>
        <div class="col-6">
          <%= form.text_area :reason, class: "form-control", rows: 3, placeholder: "Please provide the reason for rejection" %>
        </div>
      </div>

      <%= form.hidden_field :requisition_type, value: "Petty Cash" %>
      <%= form.hidden_field :workflow_state_id, value: params[:workflow_state_id] %>

      <div class="mt-3">
        <% (@possible_actions || []).each do |action| %>
          <% if action == "Re-submit Request" %>
              <%= form.submit action, class: "btn btn-success btn-block", data: { disable_with: "Processing..." } %>
          <% else %>
            <%
              btn_class = "btn btn-info"
              if @requisition.current_state == "Requested"
                btn_class = "btn btn-danger" if action == "Reject Request"
                btn_class = "btn btn-success" if action == "Approve Request"
              end

              path = "/requisitions/#{@requisition.id}/#{action.parameterize(separator: '_')}"
            %>

            <%= link_to action, path, class: btn_class, method: :put,
                        data: { turbo_method: :put, turbo_confirm: "Are you sure you want to #{action.split(' ').first.downcase} this request?" } %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const rejectionReasonContainer = document.getElementById('rejection-reason-container');
    const rejectionReasonField = rejectionReasonContainer.querySelector('textarea[name="requisition[reason]"]');
    const actionLinks = document.querySelectorAll('a.btn'); // Assuming your action buttons have the class 'btn'

    // Function to handle showing/hiding the reason field
    function toggleReasonField(show) {
      if (show) {
        rejectionReasonContainer.style.display = 'block';
        rejectionReasonField.setAttribute('required', '');
      } else {
        rejectionReasonContainer.style.display = 'none';
        rejectionReasonField.removeAttribute('required');
        rejectionReasonField.value = ''; // Clear the field if hidden
      }
    }

    // Initially hide the reason field
    toggleReasonField(false);

    // Add event listeners to the action buttons
    actionLinks.forEach(link => {
      link.addEventListener('click', function(event) {
        const actionText = this.textContent.trim();
        if (actionText == 'Reject Request') {
          // Prevent default link behavior, we'll handle submission if reason is filled
          event.preventDefault();
          toggleReasonField(true);

          // You might want to add an additional listener to a submit button
          // that appears when the reject button is clicked, or handle the
          // form submission more directly here after the reason is filled.
          // For this example, we'll rely on the 'required' attribute and
          // server-side validation.

        } else {
          toggleReasonField(false);
        }
      });
    });

    // Note: The form submission for actions other than "Re-submit Request"
    // is handled by the link_to with the PUT method. For "Reject Request",
    // the browser's built-in required attribute will prompt the user.
    // Server-side validation in your Rails controller is crucial to
    // enforce the reason's presence.
  });
</script>
